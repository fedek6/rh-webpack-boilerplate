///
/// Generate local font-face
///
/// @group Fonts
///
/// @example Basic usage
///  @font-face {
///      @include fontFaceLocal('BrunelPoster-Roman', 'BrunelPoster', normal, 400);
///  }
///
@mixin fontFaceLocal($font, $family, $style, $weight) {
  font-family: $family;
  src: url($font-path + $font + '.eot');
  src: url($font-path + $font + '.eot?#iefix') format('embedded-opentype'),
    url($font-path + $font + '.woff') format('woff'),
    url($font-path + $font + '.ttf') format('truetype'),
    url($font-path + $font + '.woff2') format('woff2');
  font-weight: $weight;
  font-style: $style;
}

///
/// Strip unit
///
/// @group Fonts
///
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

///
/// Generate fluid font size
///
/// @example Usage example
///   $min_width: 320px;
///   $max_width: 1200px;
///   $min_font: 16px;
///   $max_font: 24px;
///
///   html {
///     @include fluid-type($min_width, $max_width, $min_font, $max_font);
///   }
///
/// @group Fonts
///
@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;

      @media screen and (min-width: $min-vw) {
        font-size: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
            ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
        );
      }

      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}
